<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.rieckpil.quickstarts</groupId>
    <artifactId>deployment-to-payara-intellij</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <jakarta.jakartaee-api.version>9.0.0</jakarta.jakartaee-api.version>
        <microprofile.version>3.0</microprofile.version>
        <mockito-core.version>3.1.0</mockito-core.version>
        <junit-jupiter.version>5.5.0</junit-jupiter.version>
        <payara.home>D:/Tools/payara5</payara.home>
        <payara.adminPort>4848</payara.adminPort>
        <payara.username>admin</payara.username>
        <payara.password></payara.password>
        <payara.hostname>localhost</payara.hostname>
        <payara.domainName>domain1</payara.domainName>
        <payara.domainDir>${payara.home}/glassfish/domains</payara.domainDir>
        <servlet.port>8080</servlet.port>
        <skipTests>false</skipTests>
    </properties>

    <dependencies>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>${jakarta.jakartaee-api.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.microprofile</groupId>
            <artifactId>microprofile</artifactId>
            <version>${microprofile.version}</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito-core.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.18</version>
        </dependency>
        <!--    <dependency>-->
        <!--      <groupId>fish.payara.distributions</groupId>-->
        <!--      <artifactId>payara</artifactId>-->
        <!--      <version>5.2021.2</version>-->
        <!--    </dependency>-->
        <!--    <dependency>-->
        <!--      <groupId>com.google.code.gson</groupId>-->
        <!--      <artifactId>gson</artifactId>-->
        <!--      <version>2.8.6</version>-->
        <!--    </dependency>-->
    </dependencies>

    <build>
        <finalName>deployment-to-payara-intellij</finalName>
<!--        <finalName></finalName>-->
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <version>1.7.16</version>
                <configuration>
                    <skip>${skipTests}</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>deploy</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>redeploy</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>undeploy</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>undeploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
    <profile>
        <id>payara5x-remote</id>
        <activation>
            <activeByDefault>true</activeByDefault>
        </activation>
        <build>
            <pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <configuration>
                            <container>
                                <containerId>payara</containerId>
                                <type>remote</type>
                            </container>
                            <configuration>
                                <type>runtime</type>
                                <properties>
                                    <cargo.remote.username>${payara.username}</cargo.remote.username>
                                    <cargo.remote.password>${payara.password}</cargo.remote.password>
                                    <cargo.glassfish.admin.port>${payara.adminPort}</cargo.glassfish.admin.port>
                                    <cargo.hostname>${payara.hostname}</cargo.hostname>
                                    <cargo.servlet.port>${servlet.port}</cargo.servlet.port>
                                </properties>
                            </configuration>
                        </configuration>
                        <!-- provides JSR88 client API to deploy on Payara -->
                        <dependencies>
                            <dependency>
                                <groupId>org.glassfish.main.deployment</groupId>
                                <artifactId>deployment-client</artifactId>
                                <version>5.0</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </pluginManagement>
        </build>
    </profile>

    <profile>
    <id>payara5x-local</id>
    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <executions>
                    <execution>
                        <id>start-cargo</id>
                        <phase>pre-integration-test</phase>
                    </execution>
                    <execution>
                        <id>stop-cargo</id>
                        <phase>post-integration-test</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.cargo</groupId>
                    <artifactId>cargo-maven2-plugin</artifactId>
                    <configuration>
                        <container>
                            <containerId>payara</containerId>
                            <type>installed</type>
                            <home>${payara.home}</home>
                        </container>
                        <configuration>
                            <type>existing</type>
                            <home>${payara.domainDir}</home>
                            <properties>
                                <cargo.remote.username>${payara.username}</cargo.remote.username>
                                <cargo.remote.password>${payara.password}</cargo.remote.password>
                                <cargo.glassfish.admin.port>${payara.adminPort}</cargo.glassfish.admin.port>
                                <cargo.hostname>${payara.hostname}</cargo.hostname>
                                <cargo.glassfish.domain.name>${payara.domainName}</cargo.glassfish.domain.name>
                            </properties>
                        </configuration>
                        <deployables>
                            <deployable>
<!--                                <groupId>war group id</groupId>-->
<!--                                <artifactId>war artifact id</artifactId>-->
<!--                                <type>war</type>-->
                                <properties>
                                    <context>/</context>
                                </properties>
<!--                                <pingURL>optional url to ping to know if deployable is done or not</pingURL>-->
<!--                                <pingTimeout>optional timeout to ping (default 20000 milliseconds)</pingTimeout>-->
                            </deployable>
<!--                            <deployable>-->
<!--                                <groupId>ear group id</groupId>-->
<!--                                <artifactId>ear artifact id</artifactId>-->
<!--                                <type>ear</type>-->
<!--                                <pingURL>optional url to ping to know if deployable is done or not</pingURL>-->
<!--                                <pingTimeout>optional timeout to ping (default 20000 milliseconds)</pingTimeout>-->
<!--                            </deployable>-->
                        </deployables>
                    </configuration>
                    <!-- provides JSR88 client API to deploy on Payara -->
                    <dependencies>
                        <dependency>
                            <groupId>org.glassfish.main.deployment</groupId>
                            <artifactId>deployment-client</artifactId>
                            <version>5.0</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    </profile>
    </profiles>
</project>
